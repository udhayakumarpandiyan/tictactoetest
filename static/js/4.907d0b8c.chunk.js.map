{"version":3,"sources":["store/actions/game.js","route/index.js","modules/home/components/Home.js","modules/home/containers/HomePage.js","modules/gameboard/components/Board.js","modules/gameboard/components/Player.js","modules/gameboard/containers/GameBoard.js","shell/components/Content.js","shell/containers/Shell.js"],"names":["addPlayers","players","dispatch","payload","type","TYPES","updatePlayers","path","state","history","push","Home","props","useState","error","setValidationError","playerInput1","useRef","playerInput2","useSelector","gameReducer","useDispatch","className","ref","name","placeholder","htmlType","onClick","event","player1","current","value","player2","length","RoutePath","HomePage","startGame","this","Component","tableCells","player","symbol","step","Board","cells","setTableCells","result","preventDefault","target","id","currentPlayer","onCellClick","map","cell","index","forEach","Player","totalWins","wins","i","winner","win","key","winningPoints","GameBoard","setCurrentPlayer","undefined","gameWinner","setGameWinner","setResult","findWinner","roundWon","winPoint","a","b","c","MainContent","exact","from","to","component","Shell","connect"],"mappings":"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","file":"static/js/4.907d0b8c.chunk.js","sourcesContent":["import * as TYPES from '../types';\n\nconst onAddPlayersSuccess = payload => {\n    return {\n        payload,\n        type: TYPES.ADD_PLAYERS,\n    };\n};\n\nconst onUpdatePlayersSuccess = payload => {\n    return {\n        payload,\n        type: TYPES.UPDATE_PLAYERS,\n    };\n};\n\n\nexport const addPlayers = (players) => {\n    return (dispatch) => {\n        dispatch(onAddPlayersSuccess(players));\n    };\n\n}\n\nexport const updatePlayers = (players) =>{\n    return (dispatch) => {\n        dispatch(onUpdatePlayersSuccess(players));\n    };\n}\n\n\n\n\n","import history from './history';\n\nconst HOME_PAGE = '/home';\nconst GAME_BOARD = `/game-board`;\n\nconst redirect = (path, state) => {\n    history.push(path, state);\n}\n\nexport default {\n    redirect: redirect,\n    HOME_PAGE: HOME_PAGE,\n    GAME_BOARD: GAME_BOARD\n}\n\n","import React, { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Input, Button, Row, Col } from 'antd';\nimport { addPlayers } from '../../../store/actions/game';\nimport RoutePath from '../../../route';\n\nconst Home = (props) => {\n    const [error, setValidationError] = useState(false);\n    const playerInput1 = useRef();\n    const playerInput2 = useRef();\n\n    const players = useSelector(state => state.gameReducer && state.gameReducer.players);\n    const dispatch = useDispatch();\n\n    const onContinue = (event) => {\n        let player1 = playerInput1.current.state.value;\n        let player2 = playerInput2.current.state.value;\n\n        if (player1 && player1.length > 3 && player1.length < 10 && player2 && player2.length > 3 && player2.length < 10) {\n            players[0].name = player1;\n            players[1].name = player2;\n            setValidationError(false);\n            dispatch(addPlayers(players));\n            RoutePath.redirect(RoutePath.GAME_BOARD);\n        }\n        else {\n            setValidationError(true);\n        }\n\n    }\n\n    return (\n        <Row className=\"outer-container\">\n            <Col className=\"home_container\">\n                <div className=\"title-container\">\n                    <label>Welcome to <span>Tic Tac Toe</span></label>\n                </div>\n                <div className=\"form\">\n                    <div className=\"form-item\">\n                        <label>Player 1</label>\n                        <Input ref={playerInput1}\n                            name=\"player1\" placeholder=\"Player 1\" />\n                        <label className={error ? \"error\" : \"error-hidden\"}>Please enter valid name</label>\n                    </div>\n                    <div className=\"form-item\">\n                        <label>Player 2</label>\n                        <Input ref={playerInput2} name=\"player2\" placeholder=\"Player 2\" />\n                        <label className={error ? \"error\" : \"error-hidden\"}>Please enter valid name</label>\n                    </div>\n                </div>\n                <div className=\"button-container\">\n                    <Button className=\"continue-button\" htmlType=\"submit\"\n                        onClick={onContinue}>{'Continue'}</Button>\n\n                </div>\n\n            </Col>\n        </Row >\n\n    )\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport Home from '../components/Home';\nimport '../styles/index.scss';\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (<div className=\"home_page\" >\n            <div className=\"name-container\">\n                <label>Tic</label>\n                <label>Tac</label>\n                <label>Toe</label>\n            </div>\n            <div className=\"home_content\">\n                <Home startGame={this.startGame} />\n            </div>\n\n        </div>)\n    }\n}\n\nexport default HomePage;","import React, { useState } from 'react';\n\nconst tableCells = [{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" }];\n\nlet step = 0;\nconst Board = (props) => {\n    const [cells, setTableCells] = useState(tableCells);\n\n    const onCellClick = (event) => {\n        if (props.result === \"won\") {\n            event.preventDefault();\n        }\n        else if (event.target.id && !tableCells[event.target.id].symbol) {\n            tableCells[event.target.id].player = props.currentPlayer;\n            tableCells[event.target.id].symbol = props.players[props.currentPlayer].symbol;\n\n            setTableCells(tableCells);\n            step += 1;\n            props.onCellClick(tableCells, step);\n        }\n\n    }\n    const onPlayNext = () => {\n        let cells = [];\n        tableCells.forEach((cell, index) => {\n            cells.push({ player: \"\", symbol: \"\" });\n        })\n        setTableCells(cells);\n\n    }\n    return (\n        <div className=\"board\">\n            <div className=\"outer-container\">\n                <div className=\"board-container\" onClick={onCellClick}>\n                    {cells && cells.map((cell, index) => {\n                        return (\n                            <div id={index} className=\"cell\">\n                                <label>{cell.symbol}</label>\n                            </div>\n\n                        )\n                    })}\n                </div>\n            </div >\n            <button className={props.result === \"won\" ? \"play-next-btn\" : \"play-next-btn-hidden\"}\n                onClick={onPlayNext}>Play next round</button>\n        </div>\n\n    )\n}\n\nexport default Board;\n","import React, { useState } from 'react';\n\n\n\nconst Player = (props) => {\n    let totalWins = props.player.wins;\n    let wins = [false, false, false, false, false, false];\n    if (totalWins > 0) {\n        for (let i = 0; i < totalWins; i++) {\n            wins[i] = true;\n        }\n    }\n\n    return (\n        <div className=\"player-container\">\n            {props.winner && props.winner.symbol === props.player.symbol ? \"Winner\" : props.result === \"draw\" ? <label>Draw</label>\n                : <label className={props.player.index === props.currentPlayer ? \"show\" : \"hide\"}>Your Turn</label>\n            }\n            <div\n                className={props.result === \"won\" && props.winner && props.winner.symbol === props.player.symbol ? \"player-highlight\" : \"player\"}>\n                <label className=\"playerNumber\">{`Player ${props.player.index + 1}`}</label>\n                <label className=\"name\">{props.player.name}</label>\n                <label className=\"symbol\">{props.player.symbol}</label>\n            </div>\n            <div className=\"steps-container\">\n                {wins.map((win, index) => {\n                    return (\n                        <div key={index} className={win ? \"win\" : \"win-faded\"} />\n                    )\n                })}\n            </div>\n        </div >\n\n    )\n}\n\nexport default Player;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../styles/index.scss';\nimport Board from '../components/Board';\nimport Player from '../components/Player';\nimport { updatePlayers } from '../../../store/actions/game';\n\n// const playersList = [{ index: 0, name: \"Udhaya\", wins: 0, symbol: \"x\", result: null },\n// { index: 1, name: \"Kumar\", wins: 0, symbol: \"o\", result: null }];\n\n\nconst winningPoints = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n];\n\nconst GameBoard = (props) => {\n    const [currentPlayer, setCurrentPlayer] = useState(0);\n   // const [players, setPlayers] = useState(playersList);\n    const [gameWinner, setGameWinner] = useState(undefined);\n    const [result, setResult] = useState('');\n\n    \n    const players = useSelector(state => state.gameReducer && state.gameReducer.players);\n    const dispatch = useDispatch();\n\n\n\n    function onCellClick(cells, step) {\n        let player = players[currentPlayer]\n        // if (player && player.wins <= 6) {\n        //     player.wins++;\n        // }\n        let currPlayer = currentPlayer === 0 ? 1 : 0;\n        setCurrentPlayer(currPlayer);\n\n        findWinner(cells, step);\n\n    }\n\n    // function to find the winner based on the following cells indexes\n    // 012, 345,678, 036,147,258,048,246\n    const findWinner = (cells, step) => {\n        let winner = undefined;\n        let roundWon = false;\n        for (let i = 0; i <= 7; i++) {\n            const winPoint = winningPoints[i];\n            let a = cells[winPoint[0]];\n            let b = cells[winPoint[1]];\n            let c = cells[winPoint[2]];\n            if (a.symbol === \"\" || b.symbol === \"\" || c.symbol === \"\") {\n                continue;\n            }\n            if (a.symbol === b.symbol && b.symbol === c.symbol) {\n                winner = a;\n\n                roundWon = true;\n                break;\n            }\n        }\n        if (roundWon) {\n            if (winner.symbol === players[0].symbol) {\n                players[0].wins += 1;\n            }\n            else {\n                players[1].wins += 1;\n            }\n            setGameWinner(winner);\n            setResult('won');\n            dispatch(updatePlayers(players));\n\n            return;\n        }\n        else {\n            step === 9 ? setResult('draw') : setResult('continue');\n        }\n\n\n    }\n\n    return (<div className=\"board_page\" >\n        <Player player={players[0]} winner={gameWinner}\n            result={result} currentPlayer={currentPlayer} />\n        <Board players={players} onCellClick={onCellClick}\n            result={result}\n            currentPlayer={currentPlayer}\n            winner={gameWinner} />\n        <Player player={players[1]} winner={gameWinner}\n            result={result} currentPlayer={currentPlayer} />\n\n    </div>)\n\n}\n\nexport default GameBoard;","import React, { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport HomePage from '../../modules/home/containers/HomePage';\nimport GameBoard from '../../modules/gameboard/containers/GameBoard';\nimport RoutePath from '../../route';\n\nconst MainContent = (props) => {\n\n\n    return (<div className=\"content\">\n        <Switch>\n            <Redirect exact from='/' to={RoutePath.HOME_PAGE} />\n            <Route exact path={RoutePath.HOME_PAGE} component={HomePage} />\n            <Route exact path={RoutePath.GAME_BOARD} component={GameBoard} />\n        </Switch>\n\n    </div>)\n}\n\n\nexport default MainContent;\n\n","import React, { Component } from 'react';\n\nimport MainContent from '../components/Content';\nimport HomePage from '../../modules/home/containers/HomePage';\nimport { Layout, Button, Drawer, Icon, Menu } from 'antd';\n\nimport { connect } from 'react-redux';\nimport RoutePath from '../../route';\nimport history from '../../route/history';\n\nimport '../styles/index.scss';\n\nclass Shell extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"shell\">\n                <div className=\"main_content\">\n                    <MainContent />\n                </div>\n            </div>\n\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, {})(Shell);"],"sourceRoot":""}