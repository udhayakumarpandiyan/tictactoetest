{"version":3,"sources":["store/actions/game.js","route/index.js","modules/home/components/Home.js","modules/home/containers/HomePage.js","modules/gameboard/components/Player.js","modules/gameboard/components/Board.js","modules/gameboard/containers/GameBoard.js","shell/components/Content.js","shell/containers/Shell.js"],"names":["addPlayers","players","dispatch","payload","type","TYPES","updatePlayers","path","state","history","push","Home","props","useState","error","setValidationError","playerInput1","useRef","playerInput2","useSelector","gameReducer","useDispatch","className","ref","name","placeholder","htmlType","onClick","event","player1","current","value","player2","length","RoutePath","HomePage","Player","totalWins","player","wins","i","winner","symbol","result","index","currentPlayer","map","win","key","tableCells","step","Board","cells","setTableCells","preventDefault","target","id","onCellClick","gameStatus","cell","forEach","onPlayNext","winningPoints","GameBoard","setCurrentPlayer","undefined","gameWinner","setGameWinner","isGameActive","setGameStatus","setResult","findWinner","roundWon","winPoint","a","b","c","MainContent","basename","exact","from","to","component","Shell","Component","connect"],"mappings":"yUAiBaA,EAAa,SAACC,GACvB,OAAO,SAACC,GACJA,EAhBG,CACHC,QAe6BF,EAd7BG,KAAMC,QAmBDC,EAAgB,SAACL,GAC1B,OAAO,SAACC,GACJA,EAhBG,CACHC,QAegCF,EAdhCG,KAAMC,Q,QCHC,EAJE,SAACE,EAAMC,GACpBC,IAAQC,KAAKH,EAAMC,IAGR,EAPG,QAOH,EANI,cC2DJG,EAxDF,SAACC,GAAW,IAAD,EACgBC,oBAAS,GADzB,mBACbC,EADa,KACNC,EADM,KAEdC,EAAeC,mBACfC,EAAeD,mBAEfhB,EAAUkB,aAAY,SAAAX,GAAK,OAAIA,EAAMY,aAAeZ,EAAMY,YAAYnB,WACtEC,EAAWmB,cAmBjB,OACI,kBAAC,IAAD,CAAKC,UAAU,mBACX,kBAAC,IAAD,CAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,6CAAkB,+CAEtB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,2CACA,kBAAC,IAAD,CAAOC,IAAKP,EACRQ,KAAK,UAAUC,YAAY,aAC/B,2BAAOH,UAAWR,EAAQ,QAAU,gBAApC,4BAEJ,yBAAKQ,UAAU,aACX,2CACA,kBAAC,IAAD,CAAOC,IAAKL,EAAcM,KAAK,UAAUC,YAAY,aACrD,2BAAOH,UAAWR,EAAQ,QAAU,gBAApC,6BAGR,yBAAKQ,UAAU,oBACX,kBAAC,IAAD,CAAQA,UAAU,kBAAkBI,SAAS,SACzCC,QAtCD,SAACC,GAChB,IAAIC,EAAUb,EAAac,QAAQtB,MAAMuB,MACrCC,EAAUd,EAAaY,QAAQtB,MAAMuB,MAErCF,GAAWA,EAAQI,OAAS,GAAKJ,EAAQI,OAAS,IAAMD,GAAWA,EAAQC,OAAS,GAAKD,EAAQC,OAAS,IAC1GhC,EAAQ,GAAGuB,KAAOK,EAClB5B,EAAQ,GAAGuB,KAAOQ,EAClBjB,GAAmB,GACnBb,EAASF,EAAWC,IACpBiC,EAAmBA,IAGnBnB,GAAmB,KA0Be,gBClC/BoB,G,OAdE,SAACvB,GAEd,OAAQ,yBAAKU,UAAU,aACnB,yBAAKA,UAAU,kBACX,sCACA,sCACA,uCAEJ,yBAAKA,UAAU,gBACX,kBAAC,EAAD,UCuBGc,G,OAhCA,SAACxB,GACZ,IAAIyB,EAAYzB,EAAM0B,OAAOC,KACzBA,EAAO,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAC/C,GAAIF,EAAY,EACZ,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAWG,IAC3BD,EAAKC,IAAK,EAIlB,OACI,yBAAKlB,UAAU,oBACVV,EAAM6B,QAAU7B,EAAM6B,OAAOC,SAAW9B,EAAM0B,OAAOI,OAAS,SAA4B,SAAjB9B,EAAM+B,OAAoB,uCAC9F,2BAAOrB,UAAWV,EAAM0B,OAAOM,QAAUhC,EAAMiC,cAAgB,OAAS,QAAxE,aAEN,yBACIvB,UAA4B,QAAjBV,EAAM+B,QAAoB/B,EAAM6B,QAAU7B,EAAM6B,OAAOC,SAAW9B,EAAM0B,OAAOI,OAAS,mBAAqB,UACxH,2BAAOpB,UAAU,gBAAjB,iBAA2CV,EAAM0B,OAAOM,MAAQ,IAChE,2BAAOtB,UAAU,QAAQV,EAAM0B,OAAOd,MACtC,2BAAOF,UAAU,UAAUV,EAAM0B,OAAOI,SAE5C,yBAAKpB,UAAU,mBACViB,EAAKO,KAAI,SAACC,EAAKH,GACZ,OACI,yBAAKI,IAAKJ,EAAOtB,UAAWyB,EAAM,MAAQ,qBCxB5DE,EAAa,CAAC,CAAEX,OAAQ,GAAII,OAAQ,IAC1C,CAAEJ,OAAQ,GAAII,OAAQ,IACtB,CAAEJ,OAAQ,GAAII,OAAQ,IACtB,CAAEJ,OAAQ,GAAII,OAAQ,IACtB,CAAEJ,OAAQ,GAAII,OAAQ,IACtB,CAAEJ,OAAQ,GAAII,OAAQ,IACtB,CAAEJ,OAAQ,GAAII,OAAQ,IACtB,CAAEJ,OAAQ,GAAII,OAAQ,IACtB,CAAEJ,OAAQ,GAAII,OAAQ,KAElBQ,EAAO,EA6DIC,EA5DD,SAACvC,GAAW,IAAD,EACUC,mBAASoC,GADnB,mBACdG,EADc,KACPC,EADO,KA4BrB,OACI,yBAAK/B,UAAU,SACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,kBAAkBK,QA7BzB,SAACC,GACI,QAAjBhB,EAAM+B,OACNf,EAAM0B,iBAED1B,EAAM2B,OAAOC,KAAOP,EAAWrB,EAAM2B,OAAOC,IAAId,SACrDO,EAAWrB,EAAM2B,OAAOC,IAAIlB,OAAS1B,EAAMiC,cAC3CI,EAAWrB,EAAM2B,OAAOC,IAAId,OAAS9B,EAAMX,QAAQW,EAAMiC,eAAeH,OAExEW,EAAcJ,GACdC,GAAQ,EACRtC,EAAM6C,YAAYR,EAAYC,MAoBrBtC,EAAM8C,WAAaN,GAASA,EAAMN,KAAI,SAACa,EAAMf,GAC1C,OACI,yBAAKY,GAAIZ,EAAOtB,UAAU,gBACtB,+BAAQqC,EAAKjB,YAKrB,yBAAKpB,UAAU,UACX,2BAAOA,UAAU,QAAjB,UACA,yBACIA,UAAU,UACV,2BAAOA,UAAU,gBAAjB,iBAA2CV,EAAM6B,OAAOG,MAAQ,IAChE,2BAAOtB,UAAU,QAAQV,EAAM6B,OAAOjB,MACtC,2BAAOF,UAAU,UAAUV,EAAM6B,OAAOC,YAO5D,4BAAQpB,UAA4B,QAAjBV,EAAM+B,QAAqC,SAAjB/B,EAAM+B,OAAoB,gBAAkB,uBACrFhB,QAtCO,WACf,IAAIyB,EAAQ,GACZH,EAAWW,SAAQ,SAACD,EAAMf,GACtBe,EAAKjB,OAAS,GACdiB,EAAKrB,OAAS,GACdc,EAAM1C,KAAK,CAAE4B,OAAQ,GAAII,OAAQ,QAErCQ,EAAO,EACPG,EAAcD,GACdxC,EAAMiD,eA4BF,qBC5DNC,EAAgB,CAClB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAkGIC,EA/FG,SAACnD,GAAW,IAAD,EACiBC,mBAAS,GAD1B,mBAClBgC,EADkB,KACHmB,EADG,OAEWnD,wBAASoD,GAFpB,mBAElBC,EAFkB,KAENC,EAFM,OAGatD,oBAAS,GAHtB,mBAGlBuD,EAHkB,KAGJC,EAHI,OAIGxD,mBAAS,IAJZ,mBAIlB8B,EAJkB,KAIV2B,EAJU,KAMnBrE,EAAUkB,aAAY,SAAAX,GAAK,OAAIA,EAAMY,aAAeZ,EAAMY,YAAYnB,WACtEC,EAAWmB,cAajB,IAAMkD,EAAa,SAACnB,EAAOF,GAGvB,IAFA,IAAIT,OAASwB,EACTO,GAAW,EACNhC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,IAAMiC,EAAWX,EAActB,GAC3BkC,EAAItB,EAAMqB,EAAS,IACnBE,EAAIvB,EAAMqB,EAAS,IACnBG,EAAIxB,EAAMqB,EAAS,IACvB,GAAiB,KAAbC,EAAEhC,QAA8B,KAAbiC,EAAEjC,QAA8B,KAAbkC,EAAElC,SAGxCgC,EAAEhC,SAAWiC,EAAEjC,QAAUiC,EAAEjC,SAAWkC,EAAElC,QAAQ,CAChDD,EAASiC,EAETF,GAAW,EACX,OAGR,GAAIA,EAmBA,OAlBI/B,EAAOC,SAAWzC,EAAQ,GAAGyC,OAC7BzC,EAAQ,GAAGsC,MAAQ,EAGnBtC,EAAQ,GAAGsC,MAAQ,EAGvB4B,EAAc1B,GACd6B,EAAU,OACVpE,EAASI,EAAcL,SAEC,IAApBA,EAAQ,GAAGsC,MAAkC,IAApBtC,EAAQ,GAAGsC,OACpC4B,EAAkC,IAApBlE,EAAQ,GAAGsC,KAAatC,EAAQ,GAAKA,EAAQ,IAC3DoE,GAAc,GACdpE,EAAQ,GAAGsC,KAAO,EAClBtC,EAAQ,GAAGsC,KAAO,EAClB+B,EAAU,cAKDA,EAAJ,IAATpB,EAAuB,OAAoB,aAUnD,OAAQ,yBAAK5B,UAAU,cACnB,yBAAKA,UAAU,kBACX,sCACA,sCACA,uCAGH8C,GAAgB,kBAAC,EAAD,CAAQ9B,OAAQrC,EAAQ,GAAIwC,OAAQyB,EACjDvB,OAAQA,EAAQE,cAAeA,IAEnC,kBAAC,EAAD,CAAO5C,QAASA,EAASwD,YAvE7B,SAAqBL,EAAOF,GACXjD,EAAQ4C,GAErBmB,EADmC,IAAlBnB,EAAsB,EAAI,GAG3C0B,EAAWnB,EAAOF,IAmEdP,OAAQA,EACRe,WAAYU,EACZvB,cAAeA,EACfJ,OAAQyB,EACRL,WApBW,WACfM,EAAc,MACdG,EAAU,eAoBTF,GAAgB,kBAAC,EAAD,CAAQ9B,OAAQrC,EAAQ,GAAIwC,OAAQyB,EACjDvB,OAAQA,EAAQE,cAAeA,MCtF5BgC,EAdK,SAACjE,GAGjB,OAAQ,yBAAKU,UAAU,WACnB,kBAAC,IAAD,CAAYwD,SAAU,KAClB,kBAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIC,GAAI/C,IAC7B,kBAAC,IAAD,CAAQ6C,OAAK,EAACxE,KAAM2B,EAAqBgD,UAAW/C,IACpD,kBAAC,IAAD,CAAQ4C,OAAK,EAACxE,KAAM2B,EAAsBgD,UAAWnB,OCD3DoB,G,mBACF,WAAYvE,GAAQ,qEACVA,I,sEAIN,OACI,yBAAKU,UAAU,SACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,Y,GATA8D,cAwBLC,uBANS,SAAC7E,GACrB,MAAO,KAK6B,GAAzB6E,CAA6BF","file":"static/js/4.15189909.chunk.js","sourcesContent":["import * as TYPES from '../types';\n\nconst onAddPlayersSuccess = payload => {\n    return {\n        payload,\n        type: TYPES.ADD_PLAYERS,\n    };\n};\n\nconst onUpdatePlayersSuccess = payload => {\n    return {\n        payload,\n        type: TYPES.UPDATE_PLAYERS,\n    };\n};\n\n\nexport const addPlayers = (players) => {\n    return (dispatch) => {\n        dispatch(onAddPlayersSuccess(players));\n    };\n\n}\n\nexport const updatePlayers = (players) =>{\n    return (dispatch) => {\n        dispatch(onUpdatePlayersSuccess(players));\n    };\n}\n\n\n\n\n","import history from './history';\n\nconst HOME_PAGE = '/home';\nconst GAME_BOARD = '/game-board';\n\nconst redirect = (path, state) => {\n    history.push(path, state);\n}\n\nexport default {\n    redirect: redirect,\n    HOME_PAGE: HOME_PAGE,\n    GAME_BOARD: GAME_BOARD\n}\n\n","import React, { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Input, Button, Row, Col } from 'antd';\nimport { addPlayers } from '../../../store/actions/game';\nimport RoutePath from '../../../route';\n\nconst Home = (props) => {\n    const [error, setValidationError] = useState(false);\n    const playerInput1 = useRef();\n    const playerInput2 = useRef();\n\n    const players = useSelector(state => state.gameReducer && state.gameReducer.players);\n    const dispatch = useDispatch();\n\n    const onContinue = (event) => {\n        let player1 = playerInput1.current.state.value;\n        let player2 = playerInput2.current.state.value;\n\n        if (player1 && player1.length > 3 && player1.length < 10 && player2 && player2.length > 3 && player2.length < 10) {\n            players[0].name = player1;\n            players[1].name = player2;\n            setValidationError(false);\n            dispatch(addPlayers(players));\n            RoutePath.redirect(RoutePath.GAME_BOARD);\n        }\n        else {\n            setValidationError(true);\n        }\n\n    }\n\n    return (\n        <Row className=\"outer-container\">\n            <Col className=\"home_container\">\n                <div className=\"title-container\">\n                    <label>Welcome to <span>Tic Tac Toe</span></label>\n                </div>\n                <div className=\"form\">\n                    <div className=\"form-item\">\n                        <label>Player 1</label>\n                        <Input ref={playerInput1}\n                            name=\"player1\" placeholder=\"Player 1\" />\n                        <label className={error ? \"error\" : \"error-hidden\"}>Please enter valid name</label>\n                    </div>\n                    <div className=\"form-item\">\n                        <label>Player 2</label>\n                        <Input ref={playerInput2} name=\"player2\" placeholder=\"Player 2\" />\n                        <label className={error ? \"error\" : \"error-hidden\"}>Please enter valid name</label>\n                    </div>\n                </div>\n                <div className=\"button-container\">\n                    <Button className=\"continue-button\" htmlType=\"submit\"\n                        onClick={onContinue}>{'Continue'}</Button>\n\n                </div>\n\n            </Col>\n        </Row >\n\n    )\n}\n\nexport default Home;","import React from 'react';\nimport Home from '../components/Home';\nimport '../styles/index.scss';\n\nconst HomePage = (props) => {\n\n    return (<div className=\"home_page\" >\n        <div className=\"name-container\">\n            <label>Tic</label>\n            <label>Tac</label>\n            <label>Toe</label>\n        </div>\n        <div className=\"home_content\">\n            <Home/>\n        </div>\n\n    </div>)\n}\nexport default HomePage;","import React, { useState } from 'react';\n\n\n\nconst Player = (props) => {\n    let totalWins = props.player.wins;\n    let wins = [false, false, false, false, false, false];\n    if (totalWins > 0) {\n        for (let i = 0; i < totalWins; i++) {\n            wins[i] = true;\n        }\n    }\n\n    return (\n        <div className=\"player-container\">\n            {props.winner && props.winner.symbol === props.player.symbol ? \"Winner\" : props.result === \"draw\" ? <label>Draw</label>\n                : <label className={props.player.index === props.currentPlayer ? \"show\" : \"hide\"}>Your Turn</label>\n            }\n            <div\n                className={props.result === \"won\" && props.winner && props.winner.symbol === props.player.symbol ? \"player-highlight\" : \"player\"}>\n                <label className=\"playerNumber\">{`Player ${props.player.index + 1}`}</label>\n                <label className=\"name\">{props.player.name}</label>\n                <label className=\"symbol\">{props.player.symbol}</label>\n            </div>\n            <div className=\"steps-container\">\n                {wins.map((win, index) => {\n                    return (\n                        <div key={index} className={win ? \"win\" : \"win-faded\"} />\n                    )\n                })}\n            </div>\n        </div >\n\n    )\n}\n\nexport default Player;\n","import React, { useState } from 'react';\nimport Player from './Player';\n\nconst tableCells = [{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" },\n{ player: \"\", symbol: \"\" }];\n\nlet step = 0;\nconst Board = (props) => {\n    const [cells, setTableCells] = useState(tableCells);\n    const onCellClick = (event) => {\n        if (props.result === \"won\") {\n            event.preventDefault();\n        }\n        else if (event.target.id && !tableCells[event.target.id].symbol) {\n            tableCells[event.target.id].player = props.currentPlayer;\n            tableCells[event.target.id].symbol = props.players[props.currentPlayer].symbol;\n\n            setTableCells(tableCells);\n            step += 1;\n            props.onCellClick(tableCells, step);\n        }\n\n    }\n    const onPlayNext = () => {\n        let cells = [];\n        tableCells.forEach((cell, index) => {\n            cell.symbol = \"\";\n            cell.player = \"\";\n            cells.push({ player: \"\", symbol: \"\" });\n        })\n        step = 0;\n        setTableCells(cells);\n        props.onPlayNext();\n\n    }\n    return (\n        <div className=\"board\">\n            <div className=\"outer-container\">\n                <div className=\"board-container\" onClick={onCellClick}>\n                    {props.gameStatus ? cells && cells.map((cell, index) => {\n                        return (\n                            <div id={index} className=\"cell player1\">\n                                <label>{cell.symbol}</label>\n                            </div>\n\n                        )\n                    }) :\n                        <div className=\"winner\">\n                            <label className=\"show\">Winner</label>\n                            <div\n                                className=\"player\">\n                                <label className=\"playerNumber\">{`Player ${props.winner.index + 1}`}</label>\n                                <label className=\"name\">{props.winner.name}</label>\n                                <label className=\"symbol\">{props.winner.symbol}</label>\n                            </div>\n\n                        </div >\n                    }\n                </div>\n            </div >\n            <button className={props.result === \"won\" || props.result === \"draw\" ? \"play-next-btn\" : \"play-next-btn-hidden\"}\n                onClick={onPlayNext}>Play next round</button>\n        </div>\n\n    )\n}\n\nexport default Board;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../styles/index.scss';\nimport Board from '../components/Board';\nimport Player from '../components/Player';\nimport { updatePlayers } from '../../../store/actions/game';\n\nconst winningPoints = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n];\n\nconst GameBoard = (props) => {\n    const [currentPlayer, setCurrentPlayer] = useState(0);\n    const [gameWinner, setGameWinner] = useState(undefined);\n    const [isGameActive, setGameStatus] = useState(true)\n    const [result, setResult] = useState('');\n\n    const players = useSelector(state => state.gameReducer && state.gameReducer.players);\n    const dispatch = useDispatch();\n\n    function onCellClick(cells, step) {\n        let player = players[currentPlayer]\n        let currPlayer = currentPlayer === 0 ? 1 : 0;\n        setCurrentPlayer(currPlayer);\n\n        findWinner(cells, step);\n\n    }\n\n    // function to find the winner based on the following cells indexes\n    // 012, 345,678, 036,147,258,048,246\n    const findWinner = (cells, step) => {\n        let winner = undefined;\n        let roundWon = false;\n        for (let i = 0; i <= 7; i++) {\n            const winPoint = winningPoints[i];\n            let a = cells[winPoint[0]];\n            let b = cells[winPoint[1]];\n            let c = cells[winPoint[2]];\n            if (a.symbol === \"\" || b.symbol === \"\" || c.symbol === \"\") {\n                continue;\n            }\n            if (a.symbol === b.symbol && b.symbol === c.symbol) {\n                winner = a;\n\n                roundWon = true;\n                break;\n            }\n        }\n        if (roundWon) {\n            if (winner.symbol === players[0].symbol) {\n                players[0].wins += 1;\n            }\n            else {\n                players[1].wins += 1;\n            }\n\n            setGameWinner(winner);\n            setResult('won');\n            dispatch(updatePlayers(players));\n\n            if (players[0].wins === 6 || players[1].wins === 6) {\n                setGameWinner(players[0].wins === 6 ? players[0] : players[1]);\n                setGameStatus(false);\n                players[0].wins = 0;\n                players[1].wins = 0;\n                setResult('continue');\n            }\n            return;\n        }\n        else {\n            step === 9 ? setResult('draw') : setResult('continue');\n        }\n\n\n    }\n    const onPlayNext = () => {\n        setGameWinner(null);\n        setResult('continue');\n    }\n\n    return (<div className=\"board_page\" >\n        <div className=\"name-container\">\n            <label>Tic</label>\n            <label>Tac</label>\n            <label>Toe</label>\n        </div>\n\n        {isGameActive && <Player player={players[0]} winner={gameWinner}\n            result={result} currentPlayer={currentPlayer} />\n        }\n        <Board players={players} onCellClick={onCellClick}\n            result={result}\n            gameStatus={isGameActive}\n            currentPlayer={currentPlayer}\n            winner={gameWinner}\n            onPlayNext={onPlayNext} />\n\n        {isGameActive && <Player player={players[1]} winner={gameWinner}\n            result={result} currentPlayer={currentPlayer} />\n        }\n\n    </div>)\n\n}\n\nexport default GameBoard;","import React from 'react';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\nimport HomePage from '../../modules/home/containers/HomePage';\nimport GameBoard from '../../modules/gameboard/containers/GameBoard';\nimport RoutePath from '../../route';\n\nconst MainContent = (props) => {\n\n\n    return (<div className=\"content\">\n        <HashRouter basename={'/'}>\n            <Redirect exact from='/' to={RoutePath.HOME_PAGE} />\n            <Route  exact path={RoutePath.HOME_PAGE} component={HomePage} />\n            <Route  exact path={RoutePath.GAME_BOARD} component={GameBoard} />\n        </HashRouter>\n\n    </div>)\n}\n\n\nexport default MainContent;\n\n","import React, { Component } from 'react';\n\nimport MainContent from '../components/Content';\nimport HomePage from '../../modules/home/containers/HomePage';\nimport { Layout, Button, Drawer, Icon, Menu } from 'antd';\n\nimport { connect } from 'react-redux';\nimport RoutePath from '../../route';\nimport history from '../../route/history';\n\nimport '../styles/index.scss';\n\nclass Shell extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"shell\">\n                <div className=\"main_content\">\n                    <MainContent />\n                </div>\n            </div>\n\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, {})(Shell);"],"sourceRoot":""}